import sqlite3

def show_full_info():
    try:
        conn = sqlite3.connect('dating_bot.db')
        c = conn.cursor()
        
        # 1. –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª—è—Ö
        print("\n=== –ü–†–û–§–ò–õ–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô ===")
        print("----------------------------------------")
        c.execute('SELECT * FROM profiles')
        profiles = c.fetchall()
        
        if not profiles:
            print("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        else:
            for profile in profiles:
                print(f"\n–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
                print(f"ID: {profile[0]}")
                print(f"–ò–º—è: {profile[1]}")
                print(f"–û —Å–µ–±–µ: {profile[2]}")
                print(f"–í–æ–∑—Ä–∞—Å—Ç: {profile[3]}")
                print(f"–ü–æ–ª: {profile[4]}")
                print(f"ID —Ñ–æ—Ç–æ: {profile[5]}")
                print(f"–ò—â–µ—Ç –ø–æ–ª: {profile[6]}")
                print("----------------------------------------")
        
        # 2. –í—Å–µ –ª–∞–π–∫–∏/–¥–∏–∑–ª–∞–π–∫–∏
        print("\n=== –õ–ê–ô–ö–ò –ò –î–ò–ó–õ–ê–ô–ö–ò ===")
        print("----------------------------------------")
        c.execute('''
            SELECT 
                p1.name as from_name,
                p2.name as to_name,
                m.status,
                p1.user_id as from_id,
                p2.user_id as to_id
            FROM matches m
            JOIN profiles p1 ON m.user1_id = p1.user_id
            JOIN profiles p2 ON m.user2_id = p2.user_id
        ''')
        matches = c.fetchall()
        
        if not matches:
            print("–ù–µ—Ç –ª–∞–π–∫–æ–≤/–¥–∏–∑–ª–∞–π–∫–æ–≤")
        else:
            for match in matches:
                status_emoji = "‚ù§Ô∏è" if match[2] == "like" else "üëé"
                print(f"{match[0]} ({match[3]}) {status_emoji} -> {match[1]} ({match[4]})")
        
        # 3. –í–∑–∞–∏–º–Ω—ã–µ –ª–∞–π–∫–∏
        print("\n=== –í–ó–ê–ò–ú–ù–´–ï –°–ò–ú–ü–ê–¢–ò–ò ===")
        print("----------------------------------------")
        c.execute('''
            SELECT 
                p1.name as user1_name,
                p2.name as user2_name,
                p1.user_id as user1_id,
                p2.user_id as user2_id
            FROM matches m1
            JOIN matches m2 ON m1.user1_id = m2.user2_id AND m1.user2_id = m2.user1_id
            JOIN profiles p1 ON m1.user1_id = p1.user_id
            JOIN profiles p2 ON m1.user2_id = p2.user_id
            WHERE m1.status = 'like' AND m2.status = 'like'
        ''')
        mutual = c.fetchall()
        
        if not mutual:
            print("–ù–µ—Ç –≤–∑–∞–∏–º–Ω—ã—Ö —Å–∏–º–ø–∞—Ç–∏–π")
        else:
            for pair in mutual:
                print(f"{pair[0]} ({pair[2]}) ‚ù§Ô∏è {pair[1]} ({pair[3]})")
        
        # 4. –°–æ–æ–±—â–µ–Ω–∏—è
        print("\n=== –°–û–û–ë–©–ï–ù–ò–Ø ===")
        print("----------------------------------------")
        c.execute('''
            SELECT 
                p1.name as from_name,
                p2.name as to_name,
                m.message,
                m.timestamp,
                p1.user_id as from_id,
                p2.user_id as to_id
            FROM messages m
            JOIN profiles p1 ON m.sender_id = p1.user_id
            JOIN profiles p2 ON m.receiver_id = p2.user_id
            ORDER BY m.timestamp
        ''')
        messages = c.fetchall()
        
        if not messages:
            print("–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π")
        else:
            for msg in messages:
                print(f"\n–û—Ç: {msg[0]} ({msg[4]})")
                print(f"–ö–æ–º—É: {msg[1]} ({msg[5]})")
                print(f"–í—Ä–µ–º—è: {msg[3]}")
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {msg[2]}")
                print("----------------------------------------")
        
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    show_full_info() 